#!/bin/bash

# CDF
# ---------------------------

# Change working directory to the top-most Finder window location
# From: https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function cdf() { # short for `cdfinder`
    cd "$(osascript -e 'tell app "Finder" to POSIX path of (insertion location as alias)')";
}


# CleanUp
# ---------------------------

# Recursively delete files that match a certain pattern
# (by default delete all `.DS_Store` files)
# From: https://github.com/necolas/dotfiles/blob/master/shell/functions/cleanup

cleanup() {
    local q="${1:-*.DS_Store}"
    find . -type f -name "$q" -ls -delete
}


# CP_P
# ---------------------------

# Copy w/ progress
# From: https://github.com/paulirish/dotfiles/blob/master/.functions
cp_p () {
    rsync -WavP --human-readable --progress $1 $2
}

# F
# ---------------------------

# find shorthand
# From: https://github.com/paulirish/dotfiles/blob/master/.functions
function f() {
    find . -name "$1" 2>&1 | grep -v 'Permission denied'
}


# FS
# ---------------------------

# Determine size of a file or total size of a directory
# From: https://github.com/mathiasbynens/dotfiles/blob/master/.functions
function fs() {
    if du -b /dev/null > /dev/null 2>&1; then
        local arg=-sbh;
    else
        local arg=-sh;
    fi
    if [[ -n "$@" ]]; then
        du $arg -- "$@";
    else
        du $arg .[^.]* *;
    fi;
}


# G
# ---------------------------

# Enable tab completion for `g` by marking it as an alias for `git`
# From: https://github.com/mathiasbynens/dotfiles/blob/master/.bash_profile
if type _git &> /dev/null && [ -f /usr/local/etc/bash_completion.d/git-completion.bash ]; then
    complete -o default -o nospace -F _git g;
fi;


# GZcompare
# ---------------------------

# Compare original and gzipped file size
# From: https://github.com/necolas/dotfiles/blob/master/shell/functions/gz
# Advanced version: https://github.com/alrra/dotfiles/blob/master/shell/bash_functions

gz() {
    local origsize=$(wc -c < "$1")
    local gzipsize=$(gzip -c "$1" | wc -c)
    local ratio=$(echo "$gzipsize * 100 / $origsize" | bc -l)

    printf "orig: %d bytes\n" "$origsize"
    printf "gzip: %d bytes (%2.2f%%)\n" "$gzipsize" "$ratio"
}


# MKD
# ---------------------------

# Create new directories and enter the first one
# From: https://github.com/alrra/dotfiles/blob/master/shell/bash_functions
# Alternative: https://github.com/mathiasbynens/dotfiles/blob/master/.functions

mkd() {
    [ -n "$*" ] && mkdir -p "$@" && cd "$@"
    #                     └─ make parent directories if needed
}


# QH
# ---------------------------

# Search history
# From: https://github.com/alrra/dotfiles/blob/master/shell/bash_functions

qh() {
    #           ┌─ enable colors for pipe
    #           │  ("--color=auto" enables colors only if
    #           │  the output is in the terminal)
    grep --color=always "$*" "$HISTFILE" |       less -RX
    # display ANSI color escape sequences in raw form ─┘│
    #       don't clear the screen after quitting less ─┘
}


# QT
# ---------------------------

# Search for text within the current directory

qt() {
    grep -ir --color=always "$*" . | less -RX
    #     │└─ search all files under each directory, recursively
    #     └─ ignore case
}


# WH
# ---------------------------

# Perform a Whois and Host lookup on a domain

wh() {
    whois $1
    host $1
}


# Misc
# ---------------------------

# Add tab completion for SSH hostnames based on ~/.ssh/config, ignoring wildcards
# From: https://github.com/mathiasbynens/dotfiles/blob/master/.bash_profile
[ -e "$HOME/.ssh/config" ] && complete -o "default" -o "nospace" -W "$(grep "^Host" ~/.ssh/config | grep -v "[?*]" | cut -d " " -f2- | tr ' ' '\n')" scp sftp ssh;
